import { a as SvelteComponentDev, b as addLoc, n as append, c as createElement, d as createText, e as detachNode, f as init, g as insert, i as noop, j as safe_not_equal, o as getContext, p as ROUTE } from './chunk-0f221a2b.js';

/* src\Components\test\HomeRoute.html generated by Svelte v3.0.0-alpha20 */

const file = "src\\Components\\test\\HomeRoute.html";

function create_fragment(ctx) {
	var h1, text1, p0, strong, text3, pre, text4_value = JSON.stringify(ctx.route.ctx,null,2), text4, text5, p1, text6, a0, text8, p2, text9, a1;

	return {
		c: function create() {
			h1 = createElement("h1");
			h1.textContent = "Homepage";
			text1 = createText("\r\n");
			p0 = createElement("p");
			strong = createElement("strong");
			strong.textContent = "route:";
			text3 = createText("\r\n");
			pre = createElement("pre");
			text4 = createText(text4_value);
			text5 = createText("\r\n");
			p1 = createElement("p");
			text6 = createText("Go to ");
			a0 = createElement("a");
			a0.textContent = "regex route";
			text8 = createText("\r\n");
			p2 = createElement("p");
			text9 = createText("Go to ");
			a1 = createElement("a");
			a1.textContent = "named-params route";
			addLoc(h1, file, 6, 0, 141);
			addLoc(strong, file, 8, 2, 167);
			addLoc(p0, file, 7, 0, 160);
			addLoc(pre, file, 10, 0, 198);
			a0.href = "/regex-route.123";
			addLoc(a0, file, 12, 8, 258);
			addLoc(p1, file, 11, 0, 245);
			a1.href = "/named/123";
			addLoc(a1, file, 15, 8, 321);
			addLoc(p2, file, 14, 0, 308);
		},

		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},

		m: function mount(target, anchor) {
			insert(target, h1, anchor);
			insert(target, text1, anchor);
			insert(target, p0, anchor);
			append(p0, strong);
			insert(target, text3, anchor);
			insert(target, pre, anchor);
			append(pre, text4);
			insert(target, text5, anchor);
			insert(target, p1, anchor);
			append(p1, text6);
			append(p1, a0);
			insert(target, text8, anchor);
			insert(target, p2, anchor);
			append(p2, text9);
			append(p2, a1);
		},

		p: noop,
		i: noop,
		o: noop,

		d: function destroy(detach) {
			if (detach) {
				detachNode(h1);
				detachNode(text1);
				detachNode(p0);
				detachNode(text3);
				detachNode(pre);
				detachNode(text5);
				detachNode(p1);
				detachNode(text8);
				detachNode(p2);
			}
		}
	};
}

function instance($$self) {
	
  let route = getContext(ROUTE);

	return { route };
}

class HomeRoute extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal);
	}
}

export default HomeRoute;
//# sourceMappingURL=HomeRoute.js.map
