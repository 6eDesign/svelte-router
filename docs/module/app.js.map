{"version":3,"file":"app.js","sources":["../../src/Components/Error.html","../../src/Components/Route.html","../../src/Components/test/HomeRoute.html","../../src/Components/test/Error.html","../../src/App.html","../../src/app.js"],"sourcesContent":["<script>\r\n  export let error = null;\r\n</script>\r\n\r\n<h1>ERROR!</h1>\r\n\r\n<p>Error: </p>\r\n{error}","<script>\n\timport { getContext, onDestroy } from 'svelte';\n\timport { writable } from 'svelte/store';\n\timport { ROUTER } from './Router.html';\n\timport DefaultLoadingComponent from './Loading.html';\n\timport DefaultErrorComponent from './Error.html';\n\n\tconst {\n\t\tregisterRoute, \n\t\tselectedRoute, \n\t\terror: routerErrorComponent=null, \n\t\tloading: routerLoadingComponent=null\n\t} = getContext(ROUTER);\n\n\t// props\n\texport let path; \n\texport let asyncComponent = null;\n\texport let component = null;\n\texport let middleware = [];\n\texport let metadata = { }\n\texport let error = null;\n\texport let loading = null;\n\n\t// template variables\n\tlet componentPromise; \n\tlet target;\n\tlet routeError = null;\n\n\t// reactive variables: \n\tlet loadingComponent, errorComponent; \n\t$: loadingComponent = loading || routerLoadingComponent || DefaultLoadingComponent;\n\t$: errorComponent = error || routerErrorComponent || DefaultErrorComponent;\n\n\tconst route = { \n\t\tpath, \n\t\tasyncComponent, \n\t\tmiddleware, \n\t\tmetadata \n\t};\n\n\tregisterRoute(route);\n\n\tselectedRoute.subscribe(selected => {\n\t\tif(!selected) return;\n\t\tif(asyncComponent && selected && selected.route == route) {\n\t\t\tcomponentPromise = asyncComponent();\n\t\t\tcomponentPromise.then(\n\t\t\t\t({default: Component}) => {\n\t\t\t\t\treturn new Component({\n\t\t\t\t\t\ttarget\n\t\t\t\t\t});\n\t\t\t}); \n\t\t}\n\t});\n\n</script>\n\n{#if $selectedRoute && $selectedRoute.route == route}\n\t{#if asyncComponent}\n\t\t{#await componentPromise}\n\t\t\t<svelte:component this={loadingComponent} />\n\t\t{:then}\n\t\t{:catch error}\n\t\t\t<svelte:component this={errorComponent} error={error} />\n\t\t{/await}\n\t\t<div bind:this={target}></div>\n\t{:elseif component}\n\t\t<svelte:component this={component} />\n\t{:else}\n\t\t<slot></slot>\n\t{/if}\n{/if}","<script>\r\n  import { getContext } from 'svelte'; \r\n  import { ROUTER } from '../Router.html';\r\n  let { selectedRoute } = getContext(ROUTER); \r\n</script>\r\n\r\n<h1>Homepage</h1>\r\n<p>\r\n  <strong>route:</strong>\r\n</p>\r\n<pre>{JSON.stringify($selectedRoute.ctx,null,2)}</pre>\r\n<p>\r\n  Go to <a href=\"/home-alt\">home-alternate</a>\r\n</p>\r\n<p>\r\n  Go to <a href=\"/regex-route.123\">regex route</a>\r\n</p>\r\n<p>\r\n  Go to <a href=\"/named/123\">named-params route</a>\r\n</p>","<script>\r\n  export let error = null;\r\n</script>\r\n\r\n<h1>Custom Error Page</h1>\r\n\r\n<pre>\r\n  {error}\r\n</pre>\r\n\r\n<style>\r\n  pre { \r\n    padding: 40px;\r\n    font-size: 14px;\r\n    background-color: rgba(255,0,0,0.2); \r\n  }\r\n</style>","<script>\n\timport Router from './Components/Router.html';\n\timport Route from './Components/Route.html';\n\timport HomeRoute from './Components/test/HomeRoute.html';\n\timport Error from './Components/test/Error.html';\n\timport Loading from './Components/test/Loading.html';\n\n\tconst exampleRouterMiddleware = (ctx,next) => {\n\t\tconsole.log(`This runs for every route in instance of Router\\n${JSON.stringify(ctx,null,2)}`); \n\t\tnext(); \n\t};\n\n\tconst exampleRouteMiddleware = (ctx,next) => {\n\t\tconsole.log(`This runs only for specific routes where it is applied\\n${JSON.stringify(ctx,null,2)}`); \n\t\tnext(); \n\t};\n\n\tconst exampleRouterMetadata = { routerId: 123 };\n\tconst exampleRouteMetadata = { pageName: 'Home (Alt)' }; \n</script>\n\n<div>\n\t<Router \n\t\thashbang={true}\n\t\terror={Error}\n\t\tloading={Loading}\n\t\tmiddleware={[exampleRouterMiddleware]}\n\t\tmetadata={exampleRouterMetadata}\n\t>\n\t\t<!-- \n\t\t\tRoute paths can be strings (exact matches or express-style \n\t\t\tnamed-params) or regex \n\t\t\n\t\t\tComponents can  be embedded via the {component} prop \n\t\t-->\n\t\t<Route \n\t\t\tpath='/' \n\t\t\tcomponent={HomeRoute}\n\t\t/>\n\t\t<!-- \n\t\t\tComponents/DOM can also be embedded via the default route slot\n\t\t-->\n\t\t<Route\n\t\t\tpath='/home-alt'\n\t\t\tmiddleware={[exampleRouteMiddleware]}\n\t\t\tmetadata={exampleRouteMetadata}\n\t\t>\n\t\t\t<HomeRoute />\n\t\t</Route>\n\t\t<!-- \n\t\t\tasyncComponent is an optional prop which provides a function which \n\t\t\tdynamically imports the necessary component for a route - for use \n\t\t\twith codesplitting.  \n\t\t-->\n\t\t<Route \n\t\t\tpath={/\\/regex-route\\.(\\d+)/} \n\t\t\tasyncComponent={() => import('./Components/test/RegexRoute.html')} \n\t\t/>\n\t\t<!-- \n\t\t\tyou can override router-wide error and loading \n\t\t\tcomponents by specifying 'loading' and 'error' slots \n\t\t\twithin a route or by passing component references to \n\t\t\tthe {error} and {loading} props of the route\n\t\t-->\n\t\t<Route \n\t\t\tpath='/named/:id' \n\t\t\tasyncComponent={() => import('./Components/test/NamedParamsRoute.html')} \n\t\t>\n\t\t</Route>\n\t</Router>\n</div>","import App from \"./App.html\";\n\nconst app = new App({\n  target: document.body,\n  data: {}\n});\n\nexport default app;"],"names":["let","const","DefaultLoadingComponent","DefaultErrorComponent","Error","Loading"],"mappings":"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"}